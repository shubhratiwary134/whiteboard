export { BaseMetadata, BaseUserMeta, BroadcastOptions, Client, ClientOptions, CommentBody, CommentBodyBlockElement, CommentBodyElement, CommentBodyInlineElement, CommentBodyLink, CommentBodyLinkElementArgs, CommentBodyMention, CommentBodyMentionElementArgs, CommentBodyParagraph, CommentBodyParagraphElementArgs, CommentBodyText, CommentBodyTextElementArgs, CommentData, History, IUserInfo, Immutable, InboxNotificationData, Json, JsonArray, JsonObject, JsonScalar, LiveList, LiveListUpdate, LiveMap, LiveMapUpdate, LiveObject, LiveObjectUpdate, LiveStructure, LostConnectionEvent, Lson, LsonObject, Others, OthersEvent, PlainLsonObject, ResolveMentionSuggestionsArgs, ResolveRoomsInfoArgs, ResolveUsersArgs, Room, RoomNotificationSettings, Status, StorageStatus, StorageUpdate, StringifyCommentBodyElements, StringifyCommentBodyOptions, ThreadData, User, createClient, getMentionedIdsFromCommentBody, shallow, stringifyCommentBody, toPlainLson } from '@liveblocks/core';

/**
 * Helper type to help users adopt to Lson types from interface definitions.
 * You should only use this to wrap interfaces you don't control. For more
 * information, see
 * https://liveblocks.io/docs/guides/limits#lson-constraint-and-interfaces
 */
declare type EnsureJson<T> = [
    unknown
] extends [T] ? T : T extends (...args: unknown[]) => unknown ? T : {
    [K in keyof T]: EnsureJson<T[K]>;
};

export type { EnsureJson };
